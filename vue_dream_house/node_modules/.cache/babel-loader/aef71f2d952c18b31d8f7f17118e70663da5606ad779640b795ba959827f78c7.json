{"ast":null,"code":"import axios from 'axios';\nexport default {\n  name: 'UserList',\n  props: {\n    Obj: Object\n  },\n  data() {\n    return {\n      imagePath: require(\"@/assets/点赞-no.png\"),\n      str: this.Obj.str,\n      province: this.Obj.province,\n      likes: this.Obj.likes\n    };\n  },\n  created() {\n    if (localStorage.getItem(`isLiked${this.Obj.id}`)) {\n      this.imagePath = require(\"@/assets/点赞-yes.png\");\n    }\n  },\n  methods: {\n    toggleImage() {\n      // 判断是否点赞过\n      if (this.imagePath === require(\"@/assets/点赞-no.png\")) {\n        // 获取按钮元素\n        const imgBtn = this.$el.querySelector('.img-btn');\n        // 给按钮元素应用缩放和旋转的样式\n        imgBtn.style.transform = 'scale(1.2) rotate(-10deg)';\n        // 设置计时器，在 300 毫秒之后给按钮元素应用新的样式\n        setTimeout(() => {\n          imgBtn.style.transform = 'scale(1) rotate(10deg)';\n          setTimeout(() => {\n            imgBtn.style.transform = 'scale(1) rotate(0deg)';\n          }, 300);\n        }, 300);\n        this.likes++;\n\n        // 将图片替换为已点赞的图片\n        this.imagePath = require(\"@/assets/点赞-yes.png\");\n        // 将已点赞的状态存入 localStorage\n        localStorage.setItem(`isLiked${this.Obj.id}`, true);\n\n        //向服务器发送发送put请求\n        axios.put(`http://localhost:8087/increaseLikesById/${this.Obj.id}`).then(res => {\n          console.log(res.data);\n        }).catch(error => {\n          console.log(\"点赞出错！\");\n          console.error(error);\n        });\n      } else {\n        this.likes--;\n\n        // 否则将图片替换为未点赞的图片\n        this.imagePath = require(\"@/assets/点赞-no.png\");\n        // 并且删除已点赞的状态\n        localStorage.removeItem(`isLiked${this.Obj.id}`);\n\n        // 向服务器发送发送put请求\n        axios.put(`http://localhost:8087/decreaseLikesById/${this.Obj.id}`).then(res => {\n          console.log(res.data);\n        }).catch(error => {\n          console.log(\"取消点赞出错！\");\n          console.error(error);\n        });\n      }\n    }\n  }\n};","map":{"version":3,"names":["axios","name","props","Obj","Object","data","imagePath","require","str","province","likes","created","localStorage","getItem","id","methods","toggleImage","imgBtn","$el","querySelector","style","transform","setTimeout","setItem","put","then","res","console","log","catch","error","removeItem"],"sources":["src/components/UserList.vue"],"sourcesContent":["<template>\r\n  <div class=\"UserList\">\r\n    <div class=\"box\">\r\n      <div class=\"box1\">\r\n        <div class=\"str\">{{str}}</div>\r\n      </div>\r\n      <div class=\"box2\">\r\n        <div class=\"province\">{{province}}</div>\r\n        <div class=\"likes\">{{likes}}</div>\r\n        <img\r\n          :src=\"imagePath\"\r\n          @click=\"toggleImage\"\r\n          class=\"img-btn\"\r\n        />\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<!-- 添加“scoped作用域”属性以将 CSS 限制为此组件 -->\r\n<style scoped lang=\"scss\">\r\n.UserList {\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n}\r\n\r\n.box {\r\n  border: 1px solid #ddd;\r\n  border-radius: 10px;\r\n  box-shadow: 2px 2px 4px #ddd;\r\n  padding: 10px;\r\n  display: flex;\r\n  flex-direction: column; //将 flex 子元素沿竖直方向排列\r\n  align-items: center; //将 flex 子元素在纵轴上居中对齐\r\n  margin: 5px;\r\n  width: 500px;\r\n  transition: all 0.3s ease; //面板放大\r\n}\r\n\r\n.box:hover {\r\n  transform: scale(1.04); //面板放大\r\n}\r\n\r\n.box1 {\r\n  width: 100%;\r\n  float: left;\r\n  margin: 5px;\r\n}\r\n\r\n.str {\r\n  flex: 1;\r\n  text-align: center;\r\n  font-size: 20px;\r\n  //font-family:wpyt;\r\n  width: 100%;\r\n  height: 25px;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  text-shadow: 1px 1px 1px rgba(0, 0, 0, 0.2);\r\n}\r\n\r\n.box2 {\r\n  width: 100%;\r\n  display: flex;\r\n}\r\n\r\n.province {\r\n  text-align: center;\r\n  font-size: 14px;\r\n  width: 120px;\r\n  height: 20px;\r\n  display: flex;\r\n}\r\n\r\n.likes {\r\n  text-align: center;\r\n  font-size: 14px;\r\n  width: 100px;\r\n  height: 20px;\r\n  margin: auto 5px auto auto;\r\n  display: flex;\r\n  justify-content: flex-end;\r\n  align-items: center;\r\n}\r\n\r\n.img-btn {\r\n  width: 16px;\r\n  height: 16px;\r\n  transition: all 0.3s ease; // 设置按钮元素的过渡效果\r\n}\r\n</style>\r\n\r\n\r\n<script>\r\nimport axios from 'axios'\r\n\r\nexport default {\r\n  name: 'UserList',\r\n  props: {\r\n    Obj: Object\r\n  },\r\n  data() {\r\n    return {\r\n      imagePath: require(\"@/assets/点赞-no.png\"),\r\n      str: this.Obj.str,\r\n      province: this.Obj.province,\r\n      likes: this.Obj.likes\r\n    };\r\n  },\r\n  created() {\r\n    if (localStorage.getItem(`isLiked${this.Obj.id}`)) {\r\n      this.imagePath = require(\"@/assets/点赞-yes.png\");\r\n    }\r\n  },\r\n  methods: {\r\n    toggleImage() {\r\n      // 判断是否点赞过\r\n      if (this.imagePath === require(\"@/assets/点赞-no.png\")) {\r\n\r\n        // 获取按钮元素\r\n        const imgBtn = this.$el.querySelector('.img-btn');\r\n        // 给按钮元素应用缩放和旋转的样式\r\n        imgBtn.style.transform = 'scale(1.2) rotate(-10deg)';\r\n        // 设置计时器，在 300 毫秒之后给按钮元素应用新的样式\r\n        setTimeout(() => {\r\n          imgBtn.style.transform = 'scale(1) rotate(10deg)';\r\n          setTimeout(() => {\r\n            imgBtn.style.transform = 'scale(1) rotate(0deg)';\r\n          }, 300);\r\n        }, 300);\r\n\r\n        this.likes++;\r\n\r\n        // 将图片替换为已点赞的图片\r\n        this.imagePath = require(\"@/assets/点赞-yes.png\");\r\n        // 将已点赞的状态存入 localStorage\r\n        localStorage.setItem(`isLiked${this.Obj.id}`, true);\r\n\r\n        //向服务器发送发送put请求\r\n        axios.put(`http://localhost:8087/increaseLikesById/${this.Obj.id}`)\r\n          .then(res => {\r\n\r\n            console.log(res.data);\r\n\r\n          })\r\n          .catch(error => {\r\n            console.log(\"点赞出错！\")\r\n            console.error(error);\r\n          });\r\n\r\n      } else {\r\n\r\n        this.likes--;\r\n\r\n        // 否则将图片替换为未点赞的图片\r\n        this.imagePath = require(\"@/assets/点赞-no.png\");\r\n        // 并且删除已点赞的状态\r\n        localStorage.removeItem(`isLiked${this.Obj.id}`);\r\n\r\n        // 向服务器发送发送put请求\r\n        axios.put(`http://localhost:8087/decreaseLikesById/${this.Obj.id}`)\r\n          .then(res => {\r\n            console.log(res.data);\r\n          })\r\n          .catch(error => {\r\n            console.log(\"取消点赞出错！\")\r\n            console.error(error);\r\n          });\r\n      }\r\n    }\r\n  }\r\n\r\n}\r\n</script>\r\n"],"mappings":"AAgGA,OAAAA,KAAA;AAEA;EACAC,IAAA;EACAC,KAAA;IACAC,GAAA,EAAAC;EACA;EACAC,KAAA;IACA;MACAC,SAAA,EAAAC,OAAA;MACAC,GAAA,OAAAL,GAAA,CAAAK,GAAA;MACAC,QAAA,OAAAN,GAAA,CAAAM,QAAA;MACAC,KAAA,OAAAP,GAAA,CAAAO;IACA;EACA;EACAC,QAAA;IACA,IAAAC,YAAA,CAAAC,OAAA,gBAAAV,GAAA,CAAAW,EAAA;MACA,KAAAR,SAAA,GAAAC,OAAA;IACA;EACA;EACAQ,OAAA;IACAC,YAAA;MACA;MACA,SAAAV,SAAA,KAAAC,OAAA;QAEA;QACA,MAAAU,MAAA,QAAAC,GAAA,CAAAC,aAAA;QACA;QACAF,MAAA,CAAAG,KAAA,CAAAC,SAAA;QACA;QACAC,UAAA;UACAL,MAAA,CAAAG,KAAA,CAAAC,SAAA;UACAC,UAAA;YACAL,MAAA,CAAAG,KAAA,CAAAC,SAAA;UACA;QACA;QAEA,KAAAX,KAAA;;QAEA;QACA,KAAAJ,SAAA,GAAAC,OAAA;QACA;QACAK,YAAA,CAAAW,OAAA,gBAAApB,GAAA,CAAAW,EAAA;;QAEA;QACAd,KAAA,CAAAwB,GAAA,iDAAArB,GAAA,CAAAW,EAAA,IACAW,IAAA,CAAAC,GAAA;UAEAC,OAAA,CAAAC,GAAA,CAAAF,GAAA,CAAArB,IAAA;QAEA,GACAwB,KAAA,CAAAC,KAAA;UACAH,OAAA,CAAAC,GAAA;UACAD,OAAA,CAAAG,KAAA,CAAAA,KAAA;QACA;MAEA;QAEA,KAAApB,KAAA;;QAEA;QACA,KAAAJ,SAAA,GAAAC,OAAA;QACA;QACAK,YAAA,CAAAmB,UAAA,gBAAA5B,GAAA,CAAAW,EAAA;;QAEA;QACAd,KAAA,CAAAwB,GAAA,iDAAArB,GAAA,CAAAW,EAAA,IACAW,IAAA,CAAAC,GAAA;UACAC,OAAA,CAAAC,GAAA,CAAAF,GAAA,CAAArB,IAAA;QACA,GACAwB,KAAA,CAAAC,KAAA;UACAH,OAAA,CAAAC,GAAA;UACAD,OAAA,CAAAG,KAAA,CAAAA,KAAA;QACA;MACA;IACA;EACA;AAEA"},"metadata":{},"sourceType":"module","externalDependencies":[]}