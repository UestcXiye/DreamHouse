{"ast":null,"code":"import axios from 'axios';\nexport default {\n  name: 'InputText',\n  // 定义数据\n  data() {\n    return {\n      isAnimating: false,\n      // 用于标识动画是否正在播放\n      inputValue: ''\n    };\n  },\n  methods: {\n    // 定义提交方法\n    submit() {\n      // 如果动画正在播放，直接返回\n      if (this.isAnimating) return;\n\n      //向服务器发送发送post请求\n      axios.post(`http://localhost:8087/Add/${this.inputValue}`).then(res => {\n        console.log(res.data);\n        this.inputValue = '';\n        this.$message({\n          message: '发送成功！',\n          type: 'success',\n          duration: 2000 // 自动关闭延迟时间，单位毫秒\n        });\n      }).catch(error => {\n        this.$message({\n          message: '发送失败！',\n          type: 'error',\n          duration: 2000 // 自动关闭延迟时间，单位毫秒\n        });\n        console.log(\"发送信息出错！\");\n        console.error(error);\n      });\n      this.isAnimating = true; // 标记动画正在播放\n      // 获取提交按钮元素\n      const btn = this.$el.querySelector(\".submit-btn\");\n      // 记录提交按钮的原始 transform 值\n      const originalTransform = btn.style.transform;\n      // 设置提交按钮的 transform 值，使其向右上方移动\n      btn.style.transform = \"translate(100%, -100%)\";\n\n      // 设置动画播放完成后的回调函数\n      setTimeout(() => {\n        // 将提交按钮的 transform 值设置为原始值\n        btn.style.transform = originalTransform;\n        // 标记动画已经播放完毕\n        this.isAnimating = false;\n      }, 500);\n    }\n  },\n  mounted() {\n    // 在组件挂载完成后，给提交按钮元素绑定 click 事件\n    this.$el.querySelector(\".submit-btn\").addEventListener(\"click\", this.submit);\n  }\n};","map":{"version":3,"names":["axios","name","data","isAnimating","inputValue","methods","submit","post","then","res","console","log","$message","message","type","duration","catch","error","btn","$el","querySelector","originalTransform","style","transform","setTimeout","mounted","addEventListener"],"sources":["src/components/InputText.vue"],"sourcesContent":["<template>\r\n  <div class=\"InputText\">\r\n    <input\r\n      type=\"text\"\r\n      maxlength=\"15\"\r\n      v-model=\"inputValue\"\r\n      placeholder=\"发送你的梦想！\"\r\n    />\r\n    <img\r\n      src=\"../assets/send.png\"\r\n      class=\"submit-btn\"\r\n    />\r\n  </div>\r\n</template>\r\n\r\n<style scoped lang=\"scss\">\r\n.InputText {\r\n  position: fixed;\r\n  bottom: 10px;\r\n  left: 0;\r\n  right: 0;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  padding: 10px;\r\n  background-color: transparent;\r\n  width: 300px;\r\n  margin: 0 auto;\r\n  //设置 z-index 值为 999,显示为最顶部\r\n  z-index: 999;\r\n}\r\n\r\ninput[type=\"text\"] {\r\n  flex: 1;\r\n  height: 40px;\r\n  padding: 0 10px;\r\n  background-color: rgba(255, 255, 255, 0.7);\r\n  border: 1px solid transparent;\r\n  border-radius: 20px;\r\n  box-shadow: 0 0 10px #42b983;\r\n  transition: all 0.3s ease-in-out;\r\n}\r\n\r\ninput[type=\"text\"]:hover {\r\n  transform: scale(1.05);\r\n  box-shadow: 0 0 15px rgba(24, 144, 255, 0.8);\r\n}\r\n\r\n.submit-btn {\r\n  height: 40px;\r\n  padding: 2px 0px 0px 10px;\r\n  background-color: transparent;\r\n  border: none;\r\n  cursor: pointer;\r\n  transform: scale(1);\r\n  transition: all 0.3s ease-in-out;\r\n  -webkit-tap-highlight-color: rgba(0, 0, 0, 0);\r\n}\r\n\r\n.submit-btn:hover {\r\n  transform: scale(1.2);\r\n}\r\n</style>\r\n\r\n<script>\r\nimport axios from 'axios'\r\n\r\nexport default {\r\n  name: 'InputText',\r\n\r\n  // 定义数据\r\n  data() {\r\n    return {\r\n      isAnimating: false, // 用于标识动画是否正在播放\r\n      inputValue: ''\r\n    };\r\n  },\r\n  methods: {\r\n    // 定义提交方法\r\n    submit() {\r\n\r\n      // 如果动画正在播放，直接返回\r\n      if (this.isAnimating)\r\n        return;\r\n\r\n      //向服务器发送发送post请求\r\n      axios.post(`http://localhost:8087/Add/${this.inputValue}`)\r\n        .then(res => {\r\n\r\n          console.log(res.data);\r\n          this.inputValue = '';\r\n\r\n          this.$message({\r\n            message: '发送成功！',\r\n            type: 'success',\r\n            duration: 2000 // 自动关闭延迟时间，单位毫秒\r\n          });\r\n        })\r\n        .catch(error => {\r\n          this.$message({\r\n            message: '发送失败！',\r\n            type: 'error',\r\n            duration: 2000 // 自动关闭延迟时间，单位毫秒\r\n          });\r\n\r\n          console.log(\"发送信息出错！\")\r\n          console.error(error);\r\n        });\r\n\r\n      this.isAnimating = true; // 标记动画正在播放\r\n      // 获取提交按钮元素\r\n      const btn = this.$el.querySelector(\".submit-btn\");\r\n      // 记录提交按钮的原始 transform 值\r\n      const originalTransform = btn.style.transform;\r\n      // 设置提交按钮的 transform 值，使其向右上方移动\r\n      btn.style.transform = \"translate(100%, -100%)\";\r\n\r\n      // 设置动画播放完成后的回调函数\r\n      setTimeout(() => {\r\n        // 将提交按钮的 transform 值设置为原始值\r\n        btn.style.transform = originalTransform;\r\n        // 标记动画已经播放完毕\r\n        this.isAnimating = false;\r\n      }, 500);\r\n\r\n    }\r\n  },\r\n  mounted() {\r\n    // 在组件挂载完成后，给提交按钮元素绑定 click 事件\r\n    this.$el.querySelector(\".submit-btn\").addEventListener(\"click\", this.submit);\r\n  }\r\n};\r\n</script>\r\n"],"mappings":"AAgEA,OAAAA,KAAA;AAEA;EACAC,IAAA;EAEA;EACAC,KAAA;IACA;MACAC,WAAA;MAAA;MACAC,UAAA;IACA;EACA;EACAC,OAAA;IACA;IACAC,OAAA;MAEA;MACA,SAAAH,WAAA,EACA;;MAEA;MACAH,KAAA,CAAAO,IAAA,mCAAAH,UAAA,IACAI,IAAA,CAAAC,GAAA;QAEAC,OAAA,CAAAC,GAAA,CAAAF,GAAA,CAAAP,IAAA;QACA,KAAAE,UAAA;QAEA,KAAAQ,QAAA;UACAC,OAAA;UACAC,IAAA;UACAC,QAAA;QACA;MACA,GACAC,KAAA,CAAAC,KAAA;QACA,KAAAL,QAAA;UACAC,OAAA;UACAC,IAAA;UACAC,QAAA;QACA;QAEAL,OAAA,CAAAC,GAAA;QACAD,OAAA,CAAAO,KAAA,CAAAA,KAAA;MACA;MAEA,KAAAd,WAAA;MACA;MACA,MAAAe,GAAA,QAAAC,GAAA,CAAAC,aAAA;MACA;MACA,MAAAC,iBAAA,GAAAH,GAAA,CAAAI,KAAA,CAAAC,SAAA;MACA;MACAL,GAAA,CAAAI,KAAA,CAAAC,SAAA;;MAEA;MACAC,UAAA;QACA;QACAN,GAAA,CAAAI,KAAA,CAAAC,SAAA,GAAAF,iBAAA;QACA;QACA,KAAAlB,WAAA;MACA;IAEA;EACA;EACAsB,QAAA;IACA;IACA,KAAAN,GAAA,CAAAC,aAAA,gBAAAM,gBAAA,eAAApB,MAAA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}